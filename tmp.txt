import { Injectable, inject } from '@angular/core';\\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\\nimport { BehaviorSubject, Observable, catchError, tap } from 'rxjs';\\nimport { environment } from '../../environments/environment';\\n\\nexport interface OAuthTokenResponse {\\n  access_token: string;\\n  refresh_token?: string;\\n  token_type: 'Bearer' | string;\\n  expires_in: number;\\n  scope?: string;\\n  hasMFA?: boolean;\\n}\\n\\n@Injectable({ providedIn: 'root' })\\nexport class AuthService {\\n  private http = inject(HttpClient);\\n  private tokenKey = 'auth_access_token';\\n  private token: string | null = null;\\n  public readonly token$ = new BehaviorSubject<string | null>(null);\\n\\n  // Define o token apenas em mem√≥ria (sem localStorage)\\n  public setToken(token: string): void {\\n    this.token = token;\\n    this.token$.next(token);\\n  }\\n\\n  getToken(): string | null {\\n    return this.token;\\n  }\\n\\n  clearToken() {\\n    this.token = null;\\n    this.token$.next(null);\\n  }\\n\\n  requestToken(username: string, password: string): Observable<OAuthTokenResponse> {\\n    // Prefer RFC compliant application/x-www-form-urlencoded POST\\n    const form = new HttpParams({ fromObject: {\\n      grant_type: 'PASSWORD',\\n      username,\\n      password,\\n    } });\\n\\n    const headers = new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' });\\n\\n    return this.http.post<OAuthTokenResponse>(`${environment.oauthTokenEndpoint}`, form.toString(), { headers }).pipe(\\n      tap(resp => { this.token = resp?.access_token ?? null; }),\\n      // Fallback: some Protheus environments accept GET with querystring\\n      catchError(() => {\\n        const qs = new HttpParams({ fromObject: {\\n          grant_type: 'PASSWORD',\\n          username,\\n          password,\\n        } });\\n        return this.http.get<OAuthTokenResponse>(`${environment.oauthTokenEndpoint}`, { params: qs }).pipe(\\n          tap(resp => { this.token = resp?.access_token ?? null; })\\n        );\\n      })\\n    );\\n  }\\n}\\n
